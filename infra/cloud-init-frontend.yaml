#cloud-config
package_update: true
package_upgrade: true

packages:
  - ca-certificates
  - curl
  - jq
  - docker.io
  - nginx

timezone: Asia/Seoul

write_files:
  - path: /opt/yangju-frontend/docker-compose.yml
    permissions: '0644'
    content: |
      version: "3.8"
      services:
        frontend:
          image: acrbcd00.azurecr.io/frontend:${IMAGE_TAG:-latest}
          container_name: yangju-frontend
          restart: always
          ports:
            - "3000:3000"
          environment:
            - NODE_ENV=production
            - VITE_API_URL=http://172.16.2.5:4000
          healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:3000"]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 60s
          logging:
            driver: "json-file"
            options:
              max-size: "10m"
              max-file: "3"
          mem_limit: 256m
          cpus: "0.50"
      networks:
        default:
          name: yangju-frontend-net

  - path: /etc/nginx/sites-available/yangju-frontend
    permissions: '0644'
    content: |
      server {
          listen 80;
          server_name _;
          
          location / {
              proxy_pass http://localhost:3000;
              proxy_http_version 1.1;
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Connection 'upgrade';
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
              proxy_cache_bypass $http_upgrade;
          }
          
          location /health {
              access_log off;
              return 200 "healthy\n";
              add_header Content-Type text/plain;
          }
      }

  - path: /usr/local/bin/acr-login.sh
    permissions: '0755'
    content: |
      #!/usr/bin/env bash
      set -euo pipefail
      REG="acrbcd00"
      echo "[INFO] ACR login(frontend): $REG"
      if command -v az >/dev/null 2>&1; then
        az login --identity --allow-no-subscriptions >/dev/null 2>&1 || echo "[WARN] MI login failed"
        az acr login --name "$REG" || echo "[WARN] ACR login failed"
      else
        echo "[WARN] az CLI not present yet"
      fi

  - path: /usr/local/bin/yangju-compose-run-frontend.sh
    permissions: '0755'
    content: |
      #!/usr/bin/env bash
      set -euo pipefail
      cd /opt/yangju-frontend
      FILE=docker-compose.yml
      export IMAGE_TAG="${IMAGE_TAG:-latest}"
      MAX=5
      for step in pull up; do
        attempt=1
        while true; do
          echo "[INFO][frontend] docker-compose ${step} attempt ${attempt}/${MAX}" >&2
          if [ "$step" = pull ]; then
            /usr/local/bin/docker-compose -f "$FILE" pull && break || true
          else
            /usr/local/bin/docker-compose -f "$FILE" up -d && break || true
          fi
          if [ $attempt -ge $MAX ]; then
            echo "[ERROR][frontend] docker-compose ${step} failed after ${MAX} attempts" >&2
            exit 1
          fi
          sleep $((attempt*5))
          attempt=$((attempt+1))
        done
      done
      exit 0

  - path: /etc/systemd/system/yangju-frontend.service
    permissions: '0644'
    content: |
      [Unit]
      Description=Yangju Frontend Stack
      After=docker.service network-online.target
      Wants=docker.service network-online.target
      [Service]
      Type=oneshot
      RemainAfterExit=yes
      WorkingDirectory=/opt/yangju-frontend
      ExecStartPre=/usr/local/bin/acr-login.sh
      ExecStart=/usr/local/bin/yangju-compose-run-frontend.sh
      ExecStop=/usr/local/bin/docker-compose -f /opt/yangju-frontend/docker-compose.yml down
      Restart=always
      RestartSec=8
      TimeoutStartSec=120
      [Install]
      WantedBy=multi-user.target

runcmd:
  - timedatectl set-timezone Asia/Seoul
  - curl -sL https://aka.ms/InstallAzureCLIDeb | bash
  - usermod -aG docker bcdfeuser00 || true
  - systemctl enable --now docker
  - DOCKER_COMPOSE_VERSION=v2.27.0
  - curl -L "https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
  - chmod +x /usr/local/bin/docker-compose
  - rm /etc/nginx/sites-enabled/default || true
  - ln -s /etc/nginx/sites-available/yangju-frontend /etc/nginx/sites-enabled/
  - systemctl restart nginx
  - systemctl daemon-reload
  - systemctl enable yangju-frontend.service
  - systemctl start yangju-frontend.service

final_message: "frontend cloud-init complete"
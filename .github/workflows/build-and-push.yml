name: Build and Push Docker Images to ACR

on:
  push:
    branches: ["main"]
    paths:
      - Front-End/**
      - Back-End/**
      - Dockerfile.frontend
      - Dockerfile.backend
      - Front-End/nginx.conf
      - .dockerignore
      - .github/workflows/build-and-push.yml
  workflow_dispatch: {}

permissions:
  contents: read
  id-token: write   # OIDC 필요

concurrency:
  group: build-acr-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: acrbcd00.azurecr.io
  FRONTEND_IMAGE_NAME: frontend
  BACKEND_IMAGE_NAME: backend
  IMAGE_TAG: latest

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure OIDC Login
        uses: azure/login@v2
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: ACR Login (via az + OIDC)
        run: az acr login --name "${REGISTRY%%.*}"

      # ---------- Frontend ----------
      - name: Frontend metadata
        id: meta-frontend
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}
          tags: |
            type=raw,value=${{ env.IMAGE_TAG }}

      - name: Build & Push Frontend
        id: build-frontend
        uses: docker/build-push-action@v6
        with:
          context: ./Front-End
          file: Dockerfile.frontend
          push: true
          provenance: false
          tags: ${{ steps.meta-frontend.outputs.tags }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}:buildcache,mode=max
          # digest push 비활성화 (단순 태그 push)

      - name: Show frontend image tag
        run: echo "Frontend pushed tag: $REGISTRY/$FRONTEND_IMAGE_NAME:latest"

      # ---------- Backend ----------
      - name: Backend metadata
        id: meta-backend
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}
          tags: |
            type=raw,value=${{ env.IMAGE_TAG }}

      - name: Build & Push Backend
        id: build-backend
        uses: docker/build-push-action@v6
        with:
          context: ./Back-End
          file: Dockerfile.backend
          push: true
          provenance: false
          tags: ${{ steps.meta-backend.outputs.tags }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}:buildcache,mode=max
          # digest push 비활성화 (단순 태그 push)

      - name: Show backend image tag
        run: echo "Backend pushed tag: $REGISTRY/$BACKEND_IMAGE_NAME:latest"

      - name: Registry propagation check
        run: |
          for i in {1..5}; do
            echo "Pull attempt $i..."
            (docker pull $REGISTRY/$FRONTEND_IMAGE_NAME:latest && docker pull $REGISTRY/$BACKEND_IMAGE_NAME:latest) && break
            sleep 5
          done

      - name: Summary
        run: |
          echo "FRONTEND: $REGISTRY/$FRONTEND_IMAGE_NAME:latest"
          echo "BACKEND:  $REGISTRY/$BACKEND_IMAGE_NAME:latest"
          echo "GITHUB_SHA: $GITHUB_SHA"
          echo "Run URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
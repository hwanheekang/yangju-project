
name: Build and Push Docker Images to ACR

on:
  push:
    branches: [ "main" ]
    paths:
      - "Front-End/**"
      - "Back-End/**"
      - "Dockerfile.frontend"
      - "Dockerfile.backend"
      - "nginx.conf"
      - ".dockerignore"
      - ".github/workflows/build-and-push.yml"
  workflow_dispatch: {}

permissions:
  contents: read
  id-token: write

env:
  REGISTRY: acrbcd00.azurecr.io
  FRONTEND_IMAGE_NAME: frontend
  BACKEND_IMAGE_NAME: backend
  IMAGE_TAG: latest

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      sha_tag: ${{ steps.set-sha-tag.outputs.sha_tag }}
    steps:
      - uses: actions/checkout@v4

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - uses: docker/setup-buildx-action@v3

      - name: ACR login
        run: az acr login --name "${REGISTRY%%.*}"

      - name: Frontend meta
        id: fe-meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}
          tags: |
            type=raw,value=${{ env.IMAGE_TAG }}
            type=sha,format=long

      - name: Build & push frontend
        id: build_frontend
        uses: docker/build-push-action@v6
        with:
          context: Front-End
          file: Dockerfile.frontend
          push: true
          provenance: false
          tags: ${{ steps.fe-meta.outputs.tags }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}:buildcache,mode=max

      - name: Backend meta
        id: be-meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}
          tags: |
            type=raw,value=${{ env.IMAGE_TAG }}
            type=sha,format=long

      - name: Build & push backend
        id: build_backend
        uses: docker/build-push-action@v6
        with:
          context: Back-End
          file: Dockerfile.backend
          push: true
          provenance: false
          tags: ${{ steps.be-meta.outputs.tags }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}:buildcache,mode=max

      - name: Summary
        run: |
          echo FRONTEND_LATEST=$REGISTRY/$FRONTEND_IMAGE_NAME:latest
          echo FRONTEND_SHA=$REGISTRY/$FRONTEND_IMAGE_NAME:${GITHUB_SHA}
          echo BACKEND_LATEST=$REGISTRY/$BACKEND_IMAGE_NAME:latest
          echo BACKEND_SHA=$REGISTRY/$BACKEND_IMAGE_NAME:${GITHUB_SHA}
          echo FRONTEND_DIGEST=${{ steps.build_frontend.outputs.digest }}
          echo BACKEND_DIGEST=${{ steps.build_backend.outputs.digest }}
          echo GIT_SHA=$GITHUB_SHA
      - name: Expose SHA tag
        id: set-sha-tag
        run: echo "sha_tag=${GITHUB_SHA}" >> $GITHUB_OUTPUT

name: Deploy to VMSS (Rolling)

on:
  workflow_dispatch:
    inputs:
      sha_tag:
        description: "(선택) 배포할 이미지 SHA 태그 (미입력 시 latest)"
        required: false
        type: string
      target:
        description: "배포 대상 (frontend|backend)"
        required: true
        default: "frontend"
        type: choice
        options:
          - frontend
          - backend
  push:
    branches: [ "main" ]
    paths:
      - "infra/docker-compose.yml"
      - ".github/workflows/deploy-vmss.yml"

permissions:
  contents: read
  id-token: write

env:
  # 기본값 (입력에 따라 덮어씀)
  AZURE_RG: rg-bcd00
  VMSS_FE: vmss-fe-bcd00
  VMSS_BE: vmss-be-bcd00
  ACR_NAME: acrbcd00
  # 단일 VMSS 명시가 필요한 레거시/단순 시나리오 호환 (요청 사항)
  # 설정 시 TARGET 값과 무관하게 이 값이 우선 적용됨
  VMSS_NAME: vmss-yangju

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      SELECTED_SHA: ${{ inputs.sha_tag }}
      TARGET: ${{ inputs.target }}
    steps:
      - uses: actions/checkout@v4

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: Decide tag / target
        id: prep
        run: |
          if [ -n "${SELECTED_SHA}" ]; then
            IMAGE_TAG="${SELECTED_SHA}"
          else
            IMAGE_TAG="latest"
          fi
          # 기본: target 기반 선택
          if [ -n "${VMSS_NAME}" ]; then
            echo "[INFO] Explicit VMSS_NAME env detected -> ${VMSS_NAME} (override target logic)"
          else
            if [ "${TARGET}" = "frontend" ]; then
              VMSS_NAME="${VMSS_FE}"
            else
              VMSS_NAME="${VMSS_BE}"
            fi
          fi
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV
          echo "VMSS_NAME=${VMSS_NAME}" >> $GITHUB_ENV
          echo "Resolved -> IMAGE_TAG=${IMAGE_TAG}, VMSS_NAME=${VMSS_NAME}"

      - name: Rolling update on VMSS
        uses: azure/cli@v2
        with:
          inlineScript: |
            set -e
            echo "Deploying IMAGE_TAG=${IMAGE_TAG} to VMSS ${VMSS_NAME} (RG=${AZURE_RG})"
            az account show -o table
            az vmss run-command invoke \
              -g "${AZURE_RG}" -n "${VMSS_NAME}" \
              --instance-id "*" \
              --command-id RunShellScript \
              --scripts "set -e
              echo '== Instance Update Start =='
              echo 'IMAGE_TAG=${IMAGE_TAG}'
              sudo az login --identity
              sudo az acr login --name ${ACR_NAME}
              export IMAGE_TAG=${IMAGE_TAG}
              cd /opt/yangju
              sudo docker compose pull
              sudo systemctl restart yangju
              sleep 6
              if curl -fsS http://localhost/api/health >/dev/null 2>&1; then
                echo 'Health OK: /api/health'
              elif curl -fsS http://localhost/health >/dev/null 2>&1; then
                echo 'Health OK: /health'
              else
                echo 'WARN: health endpoint not reachable'
              fi
              sudo docker ps --format 'table {{.Names}}\t{{.Image}}\t{{.Status}}'
              echo '== Instance Update End =='
              " \
              --query 'value[].message' -o tsv
            echo "Run-command dispatched to all instances (*)"

      - name: Summary
        run: |
          echo '### VMSS Deploy Summary' >> $GITHUB_STEP_SUMMARY
          echo "- Target: ${TARGET}" >> $GITHUB_STEP_SUMMARY
          echo "- VMSS: ${VMSS_NAME}" >> $GITHUB_STEP_SUMMARY
          echo "- Image Tag: ${IMAGE_TAG}" >> $GITHUB_STEP_SUMMARY
          echo "- Resource Group: ${AZURE_RG}" >> $GITHUB_STEP_SUMMARY
          echo "- ACR: ${ACR_NAME}" >> $GITHUB_STEP_SUMMARY

# --- 1단계: 빌드 스테이지 (Node.js로 React 앱 빌드) ---
FROM node:20.19-alpine AS builder

WORKDIR /app

# 캐시 최적화: 의존성만 우선 복사
COPY Front-End/package*.json ./

# 잠금파일 우선 설치
RUN if [ -f package-lock.json ]; then npm ci; else npm install; fi

# 소스 복사 및 빌드
COPY Front-End/ ./
RUN npm run build

# Runtime 단계: Nginx 경량 이미지 (최종 배포용)
FROM nginx:1.25-alpine

# (옵션) 헬스체크용 curl만 설치
RUN apk add --no-cache curl gettext

# 정적 산출물 복사
COPY --from=builder /app/dist /usr/share/nginx/html

# 커스텀 nginx.conf (빌드 컨텍스트가 루트이므로 Front-End 디렉토리에서 찾음)
COPY Front-End/nginx.conf /etc/nginx/templates/default.conf.template

EXPOSE 80

HEALTHCHECK --interval=30s --timeout=5s --start-period=10s --retries=3 \
    CMD curl -fsS http://localhost/health || exit 1

# --- Nginx 권한 문제 해결을 위해 이 부분을 수정하세요 ---
# 필요한 폴더들을 먼저 생성한 후, 소유권을 변경합니다.
RUN mkdir -p /var/lib/nginx /var/cache/nginx/client_temp /var/lib/nginx/tmp/client_body && \
    touch /var/run/nginx.pid && \
    chown -R nginx:nginx /var/lib/nginx /var/cache/nginx /var/run/nginx.pid /etc/nginx/conf.d

# 런타임 환경변수 치환 스크립트 (envsubst)
COPY --from=builder /bin/sh /bin/sh
ENV BACKEND_SCHEME=http BACKEND_HOST=localhost BACKEND_PORT=4000

ENTRYPOINT ["/bin/sh", "-c", "\n  echo '[INFO] Bootstrapping Nginx container'\n  echo '[INFO] Effective ENV -> BACKEND_SCHEME='$BACKEND_SCHEME' BACKEND_HOST='$BACKEND_HOST' BACKEND_PORT='$BACKEND_PORT\n  # Fail-fast 조건: Azure 환경 && (localhost 또는 빈 값)\n  if [ -n \"$WEBSITE_SITE_NAME\" ]; then\n    if [ -z \"$BACKEND_HOST\" ] || [ \"$BACKEND_HOST\" = \"localhost\" ]; then\n      echo '[FATAL] BACKEND_HOST invalid (empty or localhost) in Azure environment. Set BACKEND_HOST App Setting.' >&2;\n      exit 1;\n    fi;\n    if [ -z \"$BACKEND_SCHEME\" ]; then\n      echo '[WARN] BACKEND_SCHEME empty -> default https' >&2; BACKEND_SCHEME=https;\n    fi;\n    if [ -z \"$BACKEND_PORT\" ]; then\n      echo '[WARN] BACKEND_PORT empty -> default 443' >&2; BACKEND_PORT=443;\n    fi;\n  fi;\n  # 템플릿 존재 확인\n  if [ ! -f /etc/nginx/templates/default.conf.template ]; then\n    echo '[FATAL] Template missing at /etc/nginx/templates/default.conf.template' >&2; exit 1;\n  fi;\n  envsubst '$$BACKEND_SCHEME $$BACKEND_HOST $$BACKEND_PORT' < /etc/nginx/templates/default.conf.template > /etc/nginx/conf.d/default.conf;\n  echo '----- Rendered upstream snippet -----'; grep backend_service -n /etc/nginx/conf.d/default.conf || true; echo '-------------------------------------';\n  echo '[INFO] Nginx starting with upstream '$BACKEND_SCHEME://$BACKEND_HOST:$BACKEND_PORT;\n  exec nginx -g 'daemon off;'\n" ]

# 보안: nginx를 non-root로 실행
# 권한 낮추기
USER nginx